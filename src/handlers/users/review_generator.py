import urllib.parse

from aiogram import F, Router, types
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.utils.markdown import hlink
from aiogram.utils.i18n import gettext as _

from db.query import (
    get_template_msg, 
    update_template_msg, 
    reset_template_msg_default,
    increment_counter
    )
from filters.CustomFilter import TextFilter
from filters.TemplateFilter import UpdateTemplateFilter
from keyboards.inline.cance import cancel_kb
from keyboards.inline.menu import gen_again_kb, back_menu_kb
from keyboards.inline.template import template_kb

router = Router()


class Template(StatesGroup):
    url = State()


@router.callback_query(F.data == 'generate_url')
async def generate_url_handler(call: types.CallbackQuery, state: FSMContext):
    t = [
        _('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å–ª–µ–¥—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ:\n'),
        _('<b><u>–ò–º—è –¢–æ–≤–∞—Ä–∞</u></b>, <b><u>–ù–æ–º–µ—Ä –ó–∞–∫–∞–∑–∞</u></b>, <b><u>–ê—Ä—Ç–∏–∫—É–ª –ü—Ä–æ–¥—É–∫—Ç–∞</u></b>, <b><u>–ù–æ–º–µ—Ä –¢–µ–ª–µ—Ñ–æ–Ω–∞</u></b>\n'),
        _('üìã –ü—Ä–∏–º–µ—Ä:\n'),
        _('<b>iPhone 16, 42145214, 110145324, 77089091122</b>'),
    ]
    await call.message.edit_text(text='\n'.join(t), reply_markup=cancel_kb())
    await state.set_state(Template.url)


@router.message(Template.url, F.text, TextFilter())
async def url_state_handler(msg: types.Message, state: FSMContext):
    m = msg.text.split(',')
    tm = await get_template_msg(tg_userid=msg.from_user.id)
    link = f"https://kaspi.kz/shop/review/productreview?orderCode={m[1].strip()}&productCode={m[2].strip()}&rating=5"
    end_m = tm.format(productname=m[0].title().strip(), ordercode=m[1].strip(), productcode=m[2].strip(), link=link.strip())
    await msg.answer(text=end_m)
    encoded_msg = urllib.parse.quote(end_m)
    w_link = hlink(title=_('‚úâÔ∏è –û—Ç–ø–∞–≤–∏—Ç—å —à–∞–±–ª–æ–Ω –≤ WhatsApp'), url=f'https://wa.me/{m[3].strip().replace("+", "")}?text={encoded_msg}')
    await msg.answer(text=f'<b><u>{w_link}</u></b>', reply_markup=gen_again_kb(), disable_web_page_preview=True)
    await state.clear()
    await increment_counter(tg_userid=msg.from_user.id)


@router.message(Template.url)
async def invalid_url_state_handler(msg: types.Message):
    t = [
        _('‚ùó –ù–µ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –í–≤–æ–¥, –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –°–Ω–æ–≤–∞!\n'),
        _('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å–ª–µ–¥—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ:\n'),
        _('<b><u>–ò–º—è –¢–æ–≤–∞—Ä–∞</u></b>'),
        _('<b><u>–ù–æ–º–µ—Ä –ó–∞–∫–∞–∑–∞</u></b>'),
        _('<b><u>–ê—Ä—Ç–∏–∫—É–ª –ü—Ä–æ–¥—É–∫—Ç–∞</u></b>'),
        _('<b><u>–ù–æ–º–µ—Ä –¢–µ–ª–µ—Ñ–æ–Ω–∞</u></b>\n'),
        _('üìã –ü—Ä–∏–º–µ—Ä:\n'),
        _('<b><u>iPhone 16, 42145214, 110145324, 77089091122</u></b>'),
    ]
    await msg.answer(text='\n'.join(t), reply_markup=cancel_kb())


@router.callback_query(F.data == 'template_msg')
async def template_msg(call: types.CallbackQuery):
    m = await get_template_msg(tg_userid=call.from_user.id)
    await call.message.edit_text(text=m, reply_markup=template_kb())


class EditTemplate(StatesGroup):
    text = State()

@router.callback_query(F.data == 'edit_template')
async def edit_template_msg(call: types.CallbackQuery, state: FSMContext):
    t = [
        _('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à —à–∞–±–ª–æ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.\n'),
        _('–í —à–∞–±–ª–æ–Ω–µ –¥–æ–ª–∂–Ω—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ:\n'),
        _('<b><u>{ordercode}</u></b> ‚Äî –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞'),
        _('<b><u>{productname}</u></b> ‚Äî –∏–º—è —Ç–æ–≤–∞—Ä–∞\n'),
        _('<b><u>{link}</u></b> ‚Äî —Å—Å—ã–ª–∫–∞ –Ω–∞ –æ—Ç–∑—ã–≤\n'),
        _('–¢–∞–∫–∂–µ —à–∞–±–ª–æ–Ω –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω—å—à–µ <b><u>50</u></b> –∏ –Ω–µ –±–æ–ª—å—à–µ <b><u>4096</u></b> —Å–∏–º–≤–æ–ª–æ–≤!\n'),
        _('–ü—Ä–∏–º–µ—Ä:\n'),
        _('------------------------'),
        _('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n'),
        _('–í–∞—à –∑–∞–∫–∞–∑ ‚Ññ <b><u>{ordercode}</u></b>'),
        _('–ò–º—è —Ç–æ–≤–∞—Ä–∞: <b><u>{productname}</u></b>\n'),
        _('–ë—É–¥–µ–º –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã, –µ—Å–ª–∏ –≤—ã –æ—Å—Ç–∞–≤–∏—Ç–µ –æ—Ç–∑—ã–≤ c 5 ‚≠ê\n'),
        _('–°—Å—ã–ª–∫–∞ –Ω–∞ –æ—Ç–∑—ã–≤: <b><u>{link}</u></b>\n'),
        _('–° —É–≤–∞–∂–µ–Ω–∏–µ–º,'),
        _('–ö–∞—Å–ø–∏ –º–∞–≥–∞–∑–∏–Ω'),
        _('------------------------'),
    ]
    await call.message.edit_text(text='\n'.join(t), reply_markup=cancel_kb())
    await state.set_state(EditTemplate.text)


@router.message(EditTemplate.text, F.text, UpdateTemplateFilter())
async def edit_template_state_handler(msg: types.Message, state: FSMContext):
    await update_template_msg(tg_userid=msg.from_user.id, text=msg.text)
    await msg.answer( text=_('‚úÖ –®–∞–±–ª–æ–Ω —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!'), reply_markup=back_menu_kb())
    await state.clear()


@router.message(EditTemplate.text)
async def invalid_update_state(msg: types.Message):
    t = [
        _('–ù–µ –≤–µ—Ä–Ω—ã–π —à–∞–±–ª–æ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ!\n'),
        _('–í —à–∞–±–ª–æ–Ω–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å <b><u>{ordercode} {productname} {link}</u></b>\n'),
        _('–¢–∞–∫–∂–µ —à–∞–±–ª–æ–Ω –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω—å—à–µ <b><u>50</u></b> –∏ –Ω–µ –±–æ–ª—å—à–µ <b><u>4096</u></b> —Å–∏–º–≤–æ–ª–æ–≤'),
    ]
    await msg.answer(text='\n'.join(t), reply_markup=cancel_kb())


@router.callback_query(F.data == 'reset_template_default')
async def reset_template_default(call: types.CallbackQuery):
    await reset_template_msg_default(tg_userid=call.from_user.id)
    await call.message.edit_text(text=_('‚úÖ –®–∞–±–ª–æ–Ω —Å–±—Ä–æ—à–µ–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é!'), reply_markup=back_menu_kb())